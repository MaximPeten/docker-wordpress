version: '3.7'

x-anchors:
  - &logs
    logging:
      driver: json-file
      options:
        max-file: '5'
        max-size: 20m

volumes:
  certbot-etc: {}
  wordpress: {}
  wp-plugins: {}
  dbdata: {}
  vsftpd: {}
  vsftpd-log: {}

secrets:
  docker_host_key:
    file: ${DOCKER_HOST_KEY}
  ssh_container_key:
    file: ${SSH_CONTAINER_KEY}

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=wordpress
    volumes: 
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
    <<: *logs

  wordpress:
    depends_on: 
      - db
    image: wordpress:5.4.1-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
      - wp-plugins:/var/www/html/wp-content/plugins
    networks:
      - app-network
    <<: *logs

  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network
    <<: *logs

  ssh:
    image: mpeten/sshd
    container_name: ssh
    environment:
      - SSH_KEY=${SSH_KEY}
      - SSH_USER=${SSH_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - D_HOST=${D_HOST}
      - HOST_USER=${HOST_USER}
      - SLACK_USER=${SLACK_USER}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL}
      - SLACK_MESSAGE=${SLACK_MESSAGE}
      - DOCKER_HOST_KEY=${DOCKER_HOST_KEY}
    ports:
      - "2222:22"
    volumes:
      - wordpress:/opt/wordpress
    secrets:
      - docker_host_key
    networks:
      - app-network
    <<: *logs

  cron:
    image: mpeten/crond
    container_name: cron
    environment:
     - JOB=* * * * * ssh -o StrictHostKeyChecking=no -i "/run/secrets/${SSH_CONTAINER_KEY}" max@ssh /home/max/db_backup-env-new.sh | grep -v "2020" >> /opt/crontab/logs/backup.log
    secrets:
     - ssh_container_key
    networks:
     - app-network
    <<: *logs

  ftp:
    image: mpeten/vsftpd
    container_name: ftp
    environment:
     - FTP_USER=${FTP_USER}
     - FTP_PASS=${FTP_PASS}
    ports:
     - "21:21"
    volumes:
     - vsftpd:/home/vsftpd
     - vsftpd-log:/var/log/vsftpd
     - wp-plugins:/home/vsftpd/${FTP_USER}/plugins
    networks:
     - app-network
    <<: *logs

  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - wordpress:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email example@email.com --agree-tos --no-eff-email --force-renewal -d example-domain.com -d www.example-domain.com
    <<: *logs

networks:
  app-network:
    driver: bridge
